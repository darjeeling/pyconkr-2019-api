version: 2.1
orbs:
  aws-ecr: circleci/aws-ecr@0.0.2
  aws-ecs: circleci/aws-ecs@0.0.8
  aws-cli: circleci/aws-cli@0.1.1
jobs:
  build:
    docker:
      - image: circleci/python:3.6.3
      - image: circleci/postgres:9.6.9-alpine
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "requirements.txt" }}
            - v1-dependencies-
      - run:
          name: install dependencies
          command: |
            python3 -m venv venv
            . venv/bin/activate
            pip install -r requirements.txt
      - save_cache:
          paths:
            - ./venv
          key: v1-dependencies-{{ checksum "requirements.txt" }}
      - run:
          name: pylint
          command: |
            . venv/bin/activate
            pylint pyconkr api ticket
      - run:
          name: run tests
          command: |
            . venv/bin/activate
            coverage run ./manage.py test
            codecov

      - store_test_results:
          path: test-reports
  push-ecr:
    docker:
      - image: circleci/python:3.6.3
    steps:
      - checkout
      - setup_remote_docker
      - aws-cli/install
      - aws-cli/configure:
          aws-access-key-id: "$AWS_ACCESS_KEY_ID"
          aws-region: "$AWS_DEFAULT_REGION"
      - run:
          name: Setup common environment variables
          command: |
            echo 'export ECR_REPOSITORY_NAME="pyconkr-2019/backend' >> $BASH_ENV
            echo 'export FULL_IMAGE_NAME="${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_DEFAULT_REGION}.amazonaws.com/pyconkr-2019/backend:${CIRCLE_SHA1}"' >> $BASH_ENV
      - run:
          name: Build image
          command: |
            docker build -t $FULL_IMAGE_NAME .



  deploy-dev:
    docker:
      - image: circleci/python:3.6.3
    steps:
      - checkout
      - add_ssh_keys:
          fingerprints:
            - "53:f6:f2:c2:3d:82:3d:b6:3c:51:13:af:e6:6f:57:35"
      - run:
          command: |
            sudo pip install fabric
            fab -H ${DEPLOY_USER}@${DEPLOY_HOST} -p -e deploy-dev --sha1 $CIRCLE_SHA1
            sleep 40
#            curl -fL ${URL_ROOT}/api/ping
      
  deploy-prod:
    docker:
      - image: circleci/python:3.6.3
    steps:
      - checkout
      - add_ssh_keys:
          fingerprints:
            - "53:f6:f2:c2:3d:82:3d:b6:3c:51:13:af:e6:6f:57:35"
      - run:
          command: |
            sudo pip install fabric
            fab -H ${DEPLOY_USER}@${DEPLOY_HOST} -p -e deploy-master --sha1 $CIRCLE_SHA1
            sleep 40
            curl -fL ${URL_ROOT}/api/ping

workflows:
  version: 2
  build-deploy:
    jobs:
      - build
      - aws-ecr/build_and_push_image:
          context: AWS_DEPLOY
          account-url: "${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_DEFAULT_REGION}.amazonaws.com"
          repo: "pyconkr-2019/backend"
          region: ${AWS_DEFAULT_REGION}
          tag: "${CIRCLE_SHA1}"
#          tag: "develop"
#          requires:
#            - build
          filters:
            branches:
              only: feature/ecr-ecs
      - aws-ecs/deploy-service-update:
          context: AWS_DEPLOY
          requires:
            - aws-ecr/build_and_push_image
          aws-region: ${AWS_DEFAULT_REGION}
          family: "pyconkr-2019-api-task"
          cluster-name: "pyconkr-2019"
          container-image-name-updates: "container=pyconkr-2019-api-dev,tag=${CIRCLE_SHA1}"
      - deploy-dev:
          context: DEVELOP
          requires:
            - build
          filters:
            branches:
              only: develop
      - deploy-prod:
          context: PROD
          requires:
            - build
          filters:
            branches:
              only: master
